openapi: 3.0.3
info:
  title: Todo-API
  version: 1.0.0
  description: 'Todo API'
paths:
  /todo/create:
    post:
      operationId: create
      summary: |
        create todo
      description: |
        create todo
      requestBody:
        description: create todo body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTodoBody"
      responses:
        '201':
          description: created todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
  /todo/update:
    put:
      operationId: update
      summary: |
        update todo
      description: |
        update todo
      parameters:
        - $ref: "#/components/parameters/p_id"
      requestBody:
        description: update todo body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTodoBody"
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
  /todo/delete:
    delete:
      operationId: delete
      summary: |
        delete todo
      description: |
        delete todo
      parameters:
        - $ref: "#/components/parameters/p_id"
  /todo/read:
    get:
      operationId: read
      summary: |
        read todo
      description: |
        read todo
      parameters:
        - $ref: "#/components/parameters/p_id"
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
  /todo/list:
    get:
      operationId: list
      summary: |
        list todos
      description: |
        list todos
      responses:
        '200':
          description: list todos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todos"
components:
  parameters:
    q_name:
      name: name
      in: query
      description: 名前
      required: false
      schema:
        type: string
    p_id:
      name: id
      in: path
      description: ID
      required: true
      schema:
        type: long
        example: 12
    q_title_required:
      name: title
      in: query
      description: タイトル
      required: true
      schema:
        type: string
      example: "ショッピング"
    q_title:
      name: title
      in: query
      description: タイトル
      schema:
        type: string
      example: "ショッピング"
    q_description:
      name: description
      in: query
      description: 説明
      schema:
        type: string
      example: "PCを買う"
    q_deadline:
      name: deadline
      in: query
      description: 終了期限
      schema:
        type: string
        formate : date
      example: "2021-08-31"
    q_done:
      name: done
      in: query
      description: 完了済みかどうか
      schema:
        type: boolean
  schemas:
    CreateTodoBody:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: タイトル
          example: "ショッピング"
        description:
          type: string
          description: 説明
          example: "PCを買う"
        deadline:
          type: string
          formate : date
          description: 終了期限
          example: "2021-08-31"
    UpdateTodoBody:
      type: object
      properties:
        title:
          type: string
          description: タイトル
          example: "ショッピング"
        description:
          type: string
          description: 説明
          example: "PCを買う"
        deadline:
          type: string
          formate : date
          description: 終了期限
          example: "2021-08-31"
        done:
          type: boolean
          description: 完了済みかどうか
    Todos:
        type: "array"
        items:
            $ref: "#/components/schemas/Todo"
    Todo:
      type: "object"
      properties:
        id:
          type: long
          example: 1
        title:
          type: string
          example: "買い物"
        description:
          type: string
          example: "PCを買う"
        deadline:
          type: string
          example: "2021-12-31"
        done:
          type: boolean
          example: false
